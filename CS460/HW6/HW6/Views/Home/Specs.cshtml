@model HW6.Models.SpecsModel
@* Will pass back a SpecsModel*@

@{
    ViewBag.Title = "Specifications";
}

@* Basic Html elements to show basic specs for the person*@
<div class="row">
    <div class="col-md-6">
        <h2>@Model.Person.FullName</h2>
        <dl class="dl-horizontal">

            <dt> @Html.Label("name", "Preferred Name:") </dt>
            <dd> @Html.DisplayFor(model => model.Person.PreferredName) </dd>

            <dt> @Html.Label("number", "Phone:") </dt>
            <dd> @Html.DisplayFor(model => model.Person.PhoneNumber) </dd>

            <dt> @Html.Label("fax", "Fax:") </dt>
            <dd> @Html.DisplayFor(model => model.Person.FaxNumber) </dd>

            <dt> @Html.Label("email", "Email:") </dt>
            <dd> @Html.DisplayFor(model => model.Person.EmailAddress) </dd>

            <dt> @Html.Label("membership", "Member Since:") </dt>
            <dd> @Html.DisplayFor(model => model.Person.ValidFrom) </dd>
        </dl>
    </div>
    <div class="col-md-4">
        <img src="https://via.placeholder.com/200.png?text=No+Photo" alt="@Model.Person.Photo" />
    </div>
</div>

@* Html elements to show if person is a primary contact person for a customer*@

@if (ViewBag.IsPrimary)
{
    @* For Company Profile Portion*@
    <div class="col-md-6">
        <h2>Company Profile</h2>
        <dl class="dl-horizontal">
            <dt> @Html.Label("company", "Company:") </dt>
            <dd> @Html.DisplayFor(model => model.Customer.CustomerName) </dd>

            <dt> @Html.Label("company-phone", "Phone:") </dt>
            <dd> @Html.DisplayFor(model => model.Customer.PhoneNumber) </dd>

            <dt> @Html.Label("company-fax", "Fax:") </dt>
            <dd> @Html.DisplayFor(model => model.Customer.FaxNumber) </dd>

            <dt> @Html.Label("company-site", "Website:") </dt>
            <dd> @Html.DisplayFor(model => model.Customer.WebsiteURL) </dd>

            <dt> @Html.Label("company-since", "Member Since:") </dt>
            <dd> @Html.DisplayFor(model => model.Customer.ValidFrom) </dd>
        </dl>
    </div>

    @* For Purchase History Summary *@
    <div class="col-md-7">
        <h2>Purchase History Summary</h2>
        <dl class="dl-horizontal">
            <dt> @Html.Label("orders", "Orders:") </dt>
            <dd> @Html.DisplayFor(model => model.Customer.Orders.Count) </dd>

            <dt> @Html.Label("sales", "Gross Sales:") </dt>
            <dd> @String.Format("{0:C}", ViewBag.Sales) </dd>

            <dt> @Html.Label("profit", "Gross Profit:") </dt>
            <dd> @String.Format("{0:C}", ViewBag.Profit) </dd>
        </dl>
    </div>

    @* For Items Purchased (10 by highest profit) *@
    <div class="col-md-6">
        <h2>Items Purchased</h2>
        <table class="table">
            <thead>
                <tr>
                    <th scope="col"> @Html.Label("stockid", "StockItemID") </th>
                    <th scope="col"> @Html.Label("description", "Description") </th>
                    <th scope="col"> @Html.Label("lineprofit", "Line Profit") </th>
                    <th scope="col"> @Html.Label("salesperson", "Sales Person") </th>
                </tr>
            </thead>
            @foreach (var items in Model.InvoiceLine)
            {
                <tbody>
                    <tr>
                        <td> @Html.DisplayFor(item => items.StockItemID) </td>
                        <td> @Html.DisplayFor(item => items.Description) </td>
                        <td> @String.Format("{0:C}", items.LineProfit) </td>
                        <td> @Html.DisplayFor(item => items.Invoice.Person4.FullName) </td>
                    </tr>
                </tbody>
            }
        </table>
    </div>
}
